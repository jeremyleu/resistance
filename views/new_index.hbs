<h1 id = "title">THE RESISTANCE</h1>
<div id = "titlecontainer" class = "contentcontainer">
  <button class = "btn btn-lg btn-secondary" id="createbtn">Create</button>
  <button class = "btn btn-lg btn-secondary" id="joinbtn">Join</button>
</div>

<div id = "createUI" class = "contentcontainer">
  <h3 id = "createerror"></h3>
  <input type = "text" class = "form-control" id="createName" name = "name" placeholder="Enter your name"></input>
  <button class = "btn btn-lg btn-secondary" id="createroombtn" value = "Create Room"></button>
  <button class = "btn btn-lg btn-secondary backbtn">Back</button>
</div>

<div id = "joinUI" class = "contentcontainer">
  <h3 id = "joinerror">{{joinError}}</h3>
  <input type = "text" class = "form-control" id="accessCode" name = "roomID" placeholder="Enter 4-digit access code"></input>
  <input type = "text" class = "form-control" id="joinName" name = "name" placeholder="Enter your name"></input>
  <button class = "btn btn-lg btn-secondary" id="joinroombtn" value = "Join Room"></button>
  <button class = "btn btn-lg btn-secondary backbtn">Back</button>
</div>
<br>

<div id = "gameUI" class = "contentcontainer">
  <h3 id = "header">Access Code:</h3>
  <h1 id = "accessCode">{{accessCode}}</h1>

  <div id = "roleinfo" class = "status"></div>
  <br>
  <div id = "cardTrack" style="display:none">
  </div>
  <div id = "status" class = "status">
    <div id = "leadinfo" class="leadStuff status">You are the leader. Propose <span id = "questNumPeople"></span> players to go on quest <span id = "currentQuest"></span>.<br></div>
  </div>

  <div id = "questTrackText" class = "displayOnStart" style = "margin-top: 15px;">Quest Track:</div>
  <div id = "questTrack" class="displayOnStart">
    <span id = "quest1" class = "glyphicon glyphicon-question-sign questGlyph"></span>
    <span id = "quest2" class = "glyphicon glyphicon-question-sign questGlyph"></span>
    <span id = "quest3" class = "glyphicon glyphicon-question-sign questGlyph"></span>
    <span id = "quest4" class = "glyphicon glyphicon-question-sign questGlyph"></span>
    <span id = "quest5" class = "glyphicon glyphicon-question-sign questGlyph"></span>
  </div>
  <div id = "questTextContainer" class="displayOnStart">
    <span id = "questtext1" class = "questText">2</span>
    <span id = "questtext2" class = "questText">3</span>
    <span id = "questtext3" class = "questText">2</span>
    <span id = "questtext4" class = "questText">2</span>
    <span id = "questtext5" class = "questText">2</span>
  </div>
  <div id = "twoFailsNote" style="display: none; margin-bottom: 10px;">
    Note: To fail quest 4, bad guys must play two fail cards!
  </div>
  <table class = "table" id = "connectedPlayers">
    <thead>
      <tr>
        <th id = "tableTitle">Connected Players: <span id = "numPlayers">{{numPlayers}}</span><span class = "removeOnStart">/10</span></th>
      </tr>
    </thead>
    {{#each players}}
    <tr>
      <td id = "{{{IDString}}}" valign = "middle">
        <span class = "playerName">{{name}}</span><span class = "leadPlayer"></span><span class = "voteIcon"></span><span class = "missionIcon"></span>
      </td>
    </tr>
    {{/each}}
  </table>

  {{#if host}}
    <button id = "startbtn" class = "btn btn-lg btn-secondary" disabled>Start</button>
  {{/if}}
  <div id = "proposeStatus" class = "status leadStuff"></div>
  <div id = "voteStatus" class = "status voteStuff"></div>
  <div id = "missionStatus" class = "status missionStuff"></div>
  <div id = "assassinateStatus" class = "status" style="display:none">You have not yet selected a target to assassinate.</div>
  <br><br>
  <button id = "proposebtn" class = "btn btn-lg btn-secondary leadStuff" disabled>Submit</button>
  <button id = "approvebtn" class = "btn btn-lg btn-secondary voteStuff votebtn">Approve</button>
  <button id = "rejectbtn" class = "btn btn-lg btn-secondary voteStuff votebtn">Reject</button>
  <button id = "successbtn" class = "btn btn-lg btn-secondary missionStuff missionbtn">Success</button>
  <button id = "failbtn" class = "btn btn-lg btn-secondary missionStuff missionbtn">Fail</button>
  <button id = "assassinatebtn" class = "btn btn-lg btn-secondary" style="display:none">Assassinate</button>
  <a href = "/" id = "homebtn" class = "btn btn-lg btn-secondary" style="display:none">Back to homepage</a>
  <br><br>
</div>
<script id = "ID">
  {{ID}}
</script>

<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
<script type = "text/javascript">
  $(function() {

    var IO = {

        /**
         * This is called when the page is displayed. It connects the Socket.IO client
         * to the Socket.IO server
         */
        init: function() {
            IO.socket = io.connect();
            IO.bindEvents();
        },

        /**
         * While connected, Socket.IO will listen to the following events emitted
         * by the Socket.IO server, then run the appropriate function.
         */
        bindEvents : function() {
            //IO.socket.on('connected', IO.onConnected );
            //IO.socket.on('newGameCreated', IO.onNewGameCreated );
            //IO.socket.on('playerJoinedRoom', IO.playerJoinedRoom );
        }
    }


    var state;
    /*if($('#joinerror').text().length ==  0)
    {
      state = "title";
      $('#createUI').css('display', 'none');
      $('#joinUI').css('display', 'none');
      $('#joinerror').css('display', 'none');
    }
    else {
      state = "join";
      $('#titlecontainer').css('display', 'none');
      $('#createUI').css('display', 'none');
    }*/
    $('#createbtn').click(function() {
      $('#titlecontainer').fadeOut(500, function() {
          $('#createUI').fadeIn(500);
      });
      state = "create";
    });
    $('#joinbtn').click(function() {
      $('#titlecontainer').fadeOut(500, function() {
          $('#joinUI').fadeIn(500);
      });
      state = "join";
    });
    $('.backbtn').click(function() {
      if(state == "create")
      {
        $('#createUI').fadeOut(500, function() {
            $('#titlecontainer').fadeIn(500);
        });
      }
      else {
        $('#joinUI').fadeOut(500, function() {
          $('#joinerror').css('display', 'none');
          $('#titlecontainer').fadeIn(500);
        });
      }
      state = "title";
    });
    $('#createroombtn').click(function(event) {
        if($('#createName').val().trim().length == 0)
        {
          $('#createerror').text('Please enter a valid name.');
        }
        else {
          $('#createUI').fadeOut(500, function() {
              $('#gameUI').fadeIn(500);
          });
          IO.socket.emit('hostCreateNewGame');
          console.log("hostCreateNewGame emitted");
        }
    });
    $('#joinroombtn').click(function(event) {
        if($('#joinName').val().trim().length == 0)
        {
          $('#joinerror').text('Please enter a valid name.');
          $('#joinerror').css('display', 'block');
        }
        else {

        }
        /*else {
          IO.socket.emit('playerJoinGame', {name: $('#joinName').val(), roomID: $('#accessCode').val()});
        }*/
    });
    IO.init();
  });
</script>
  <!--<script id = "joinError" type = "application/json">
    {{{ jsonifiedProps.joinError }}}
  </script>
  <script>
    var props = JSON.parse(document.getElementById("props").innerHTML);
    console.log(props);
    React.render(TitleContainer(props), document.getElementById('container'));
  </script>
  <script src="/app.js" type = "text/babel"></script>
  <script>
    $(function() {
      var error = $('#joinError').html();
      console.log(error);
      if(error)
      {
        console.log($('#joinbtn').html());
        $('#joinbtn').click();
      }
    });
  </script>-->
<!--</body>
</html>-->
